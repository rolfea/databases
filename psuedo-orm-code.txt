'remove duplicates in a query response'
  -- returns individual users post table
  SELECT DISTINCT column FROM table
  SELECT DISTINCT user FROM post;

'filter records using inequalities, pattern matching, ranges, and boolean logic'
  -- returns comments with a rating greater than 5
  SELECT column WHERE pattern/boolean/range
  SELECT comment WHERE (rating < 5);

'sort records in a particular order/limit records returned'
  -- returns the 10 highest rated posts from the forum
  SELECT column FROM table ORDER BY column_with_value ASC/DESC
  SELECT post FROM forum ORDER BY rating DESC LIMIT 10;

'group records into sections'
  -- returns all posts organized by user_id
  SELECT * FROM posts GROUP BY user_id

'perform calculations using aggregate functions'
  -- calculate the average amount of posts of different ratings for a specific user on a forum
  SELECT rating, AVG(post) FROM forum WHERE (user_id == 2) GROUP BY rating;

'join tables using cross join, inner join, and outer join'
  -- create a new table combining users and posts (inner join)
  SELECT * FROM posts JOIN users ON posts.user_id = users.id;
  -- same as above table but will include posts with no user_id
  SELECT * FROM posts LEFT JOIN users ON posts.user_id = users.id;
